#!/bin/bash

set -e

DIR=$(dirname $0)
export PWD=$(pwd)

find-up () {
  path=${2-$PWD}
  while [[ "$path" != "" && ! -e "$path/$1" ]]; do
    path=${path%/*}
  done
  echo "$path"
}

if [[ -z $COMPOSE_PROJECT_APPDIR ]]; then
  export COMPOSE_PROJECT_APPDIR=$(find-up composer.json "$PWD")
fi

if [[ ! -d "$COMPOSE_PROJECT_APPDIR" ]]; then
  mkdir -p "$COMPOSE_PROJECT_APPDIR"
fi

cd "$COMPOSE_PROJECT_APPDIR"

if [[ -f .dockenv ]]; then
  set -o allexport
  source .dockenv
  set +o allexport
fi

if [[ -f .env ]]; then
  set -o allexport
  source .env
  set +o allexport
fi

export COMPOSE_PROJECT_MODE=${COMPOSE_PROJECT_MODE-default}
export COMPOSE_PROJECT_PHP_VERSION=${COMPOSE_PROJECT_PHP_VERSION-7.4}
export COMPOSE_PROJECT_NAME=${COMPOSE_PROJECT_NAME-$(basename "$COMPOSE_PROJECT_APPDIR")}
export COMPOSE_PROJECT_COMPOSER_AUTH=${COMPOSE_PROJECT_COMPOSER_AUTH-${COMPOSER_AUTH-""}}
export COMPOSE_PROJECT_CONFIG_DIR="$HOME/.$(basename $0)/${COMPOSE_PROJECT_NAME}"

if [[ ! -d "${COMPOSE_PROJECT_CONFIG_DIR}" ]]; then
  echo -e "mkdir -p ${COMPOSE_PROJECT_CONFIG_DIR}"
  mkdir -p "${COMPOSE_PROJECT_CONFIG_DIR}"
fi

rsync -r "${DIR}/" "${COMPOSE_PROJECT_CONFIG_DIR}/"

if [[ "$OSTYPE" == "darwin"* ]]; then
  echo -e "export COMPOSE_PROJECT_MODE=mutagen"
  export COMPOSE_PROJECT_MODE="mutagen"
fi

if [[ $COMPOSE_PROJECT_MODE == "mutagen" ]] && [[ -f "${COMPOSE_PROJECT_CONFIG_DIR}/docker-compose-mutagen.yml" ]]; then
  DOCKER_COMPOSE_BIN="${DOCKER_COMPOSE_BIN} -f ${COMPOSE_PROJECT_CONFIG_DIR}/docker-compose-mutagen.yml"
  MUTAGEN_SESSION_NAME=$(echo ${COMPOSE_PROJECT_NAME}-appcode | awk '{print tolower($0)}' | sed 's/[^0-9a-z]/-/g')
  WAIT_SYNC="1"
  if docker volume ls | grep "^${COMPOSE_PROJECT_NAME}_appcode$" > /dev/null 2>&1; then
    if [[ $(docker volume inspect -f '{{ .Options.type }}' ${COMPOSE_PROJECT_NAME}_appcode) == "nfs" ]]; then
      docker volume rm ${COMPOSE_PROJECT_NAME}_appcode
    fi
  fi

  if [[ $1 == "down" ]]; then
    if mutagen sync list | grep -i "Name: ${MUTAGEN_SESSION_NAME}" > /dev/null 2>&1; then
      mutagen sync terminate "${MUTAGEN_SESSION_NAME}"
    fi
    WAIT_SYNC=""
  else
    if [[ "0" -eq $(${DOCKER_COMPOSE_BIN} ps -q mutagen  2> /dev/null | wc -l > /dev/null) ]]; then
      ${DOCKER_COMPOSE_BIN} up -d mutagen
    fi
    DOCKER_CONTAINER_NAME_MUTAGEN=$(docker inspect -f '{{.Name}}' $(${DOCKER_COMPOSE_BIN} ps -q mutagen) | cut -c2-)
    if ! mutagen sync list | grep -i "Name: ${MUTAGEN_SESSION_NAME}" > /dev/null 2>&1; then
      mutagen sync create --sync-mode=two-way-resolved --ignore-vcs --symlink-mode=ignore --name=${MUTAGEN_SESSION_NAME} "$COMPOSE_PROJECT_APPDIR" docker://linuxbrew@${DOCKER_CONTAINER_NAME_MUTAGEN}/var/www
    else
      WAIT_SYNC=""
    fi

    if [[ $WAIT_SYNC == "1" ]]; then
      until mutagen sync list "${MUTAGEN_SESSION_NAME}" | grep 'Status:' | grep 'Watching for changes' > /dev/null 2>&1; do
        if which tput > /dev/null 2>&1; then
          tput cuu 1 && tput el
        fi
        mutagen sync list "${MUTAGEN_SESSION_NAME}" | grep 'Status:' | echo $(awk -F: '{ print $2 }')
        sleep 3
      done
    fi
  fi
fi

if [[ $1 == "up" ]]; then
  printf "\033[0;37m[${COMPOSE_PROJECT_NAME}] Deployer env\033[0m\n"
fi

exec ${DOCKER_COMPOSE_BIN} "$@"
